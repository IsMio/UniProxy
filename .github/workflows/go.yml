# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: |
          wget https://github.com/SagerNet/sing-geosite/releases/latest/download/geosite.db -O geo/geosite.dat
          wget https://github.com/SagerNet/sing-geoip/releases/latest/download/geoip.db -O geo/geoip.dat
          cd cmd/uniproxy || exit
          go build -o ../../uniproxy.exe -ldflags '-s -w' -gcflags="all=-trimpath=${PWD}" -asmflags="all=-trimpath=${PWD}" -tags "with_quic with_gvisor with_grpc with_utls"
          cd ../reset || exit
          go build -o ../../reset.exe -ldflags '-s -w' -gcflags="all=-trimpath=${PWD}" -asmflags="all=-trimpath=${PWD}"
